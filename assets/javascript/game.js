/* 
STEP 1: user chooses a letter
    if letter === hiddenLetter, then reveal (push) letter in hiddenWord
        remaining tries goes down
    if letter !== hiddenLetter, then reveal (push) letter in usedLetter
        remaining tries goes down
STEP 2: user continues to choose a letter until
    if hiddenWord is revealed, then game restarts
        wins ++
    if remaining tries === 0, then game restarts
        losses ++

1:  user presses a letter
2:  if right letter
        reveal letter in current word
        remaining guesses --
    else wrong letter
        reveal letter in guessed letters
        remaining guesses --
3:  when all letters guessed & remaining guesses > 0
        wins ++
        restart the game (generate new word, clear letters      guessed, remaining guesses to 12)
   
*/
// Array of word options
let wordsList = ["irritated", "ashamed", "useless", "secure", "thankful", "anxious", "animated", "content"];

// random word will be held here - generated by Math
let chosenWord = ""; 

// number of blanks based on the chosenWord
let numBlanks = 0;

// will hold the mix of blank and correct letters
let  blanksAndSuccesses = [];

// will hold the letters guessed
let letterGuessed = "";

// game counters
let winCounter = 0;
let lossCounter = 0;
let numGuesses = 9;

function startGame() {

    // resets the numGuesses
    numGuesses = 9;

    //  a word is chosen randomly from the wordsList
    chosenWord = wordsList[Math.floor(Math.random() * wordsList.length)];

    // test in console
    console.log(chosenWord)

    // take the word string and creates letters array
    lettersInChosenWord = chosenWord.split('');

    // test in console
    console.log(lettersInChosenWord)

    // this holds the value of the number of letters
    numBlanks = lettersInChosenWord.length;

    //test in console
    console.log(chosenWord)

    // reseting the mix of blanks and correct letters
    blanksAndSuccesses = [];

    // reseting the wrong guesses
    wrongGuesses = [];

    // fill the blanksAndSuccesses array with the number 
    // of blanks based on the length of the word held in 
    // numBlanks,push returns the lenght in an array of _
    for (var i = 0; i < numBlanks; i++) {
        blanksAndSuccesses.push("_");
    }

    // test 
    console.log(blanksAndSuccesses)

    // puts the number of guesses in DOM through html
    document.getElementById("guesses-left").textContent = numGuesses;

    // prints the blanks on the DOM through html, since 
    // blanks is an array and has commas, use join " " to 
    // make a string
    document.getElementById("word-blanks").textContent = blanksAndSuccesses.join(" ")

    // clears the wrong guesses
    document.getElementById("wrong-guesses").textContent = wrongGuesses.join(" ");
}

// make comparisons to check letters
function checkLetters(letter) {

    // set boolean on whether or not a user letter is in   //the word
    let letterInWord = false;

    // check if letter inside the array
    for (var i = 0; i < numBlanks; i++) {

        if (chosenWord[i] === letter) {
        
            // if letter exists then make boolean true
            letterInWord = true;
        }
    }

    // if letter exists in word then figure out where
    if (letterInWord) {

        // loop through the word
        for (var j = 0; j < numBlanks; j++) {

            //populate the blanksAndSuccesses with every instance of the letter
            if (chosenWord[j] === letter) {

                //set specfic bland spaces equal to the correct letter where there is a match
                blanksAndSuccesses[j] = letter;
            }
        }
        // test
        console.log(blanksAndSuccesses);
    }

    // if letter doesn't exist
    else {

        // add letter to list of wrong letters
        wrongGuesses.push(letter);

        // subtract one of guesses
        numGuesses--;
    }
}

function roundComplete() {

    //log status update 
    console.log("WinCount: " + winCounter + " | LossCount: " + lossCounter + " | NumGuesses: " + numGuesses);

    // Update the HTML to reflect the new number of guesses.
    document.getElementById("guesses-left").textContent = numGuesses;

    // This will print the array of guesses and blanks onto the page.
    document.getElementById("word-blanks").textContent = blanksAndSuccesses.join(" ");

    // This will print the wrong guesses onto the page.
    document.getElementById("wrong-guesses").textContent = wrongGuesses.join(" ");

    // If our Word Guess string equals the solution.
    // (meaning that we guessed all the letters to match the solution)...
    if (lettersInChosenWord.toString() === blanksAndSuccesses.toString()) {

    // Add to the win counter
    winCounter++;

    // Give the user an alert
    alert("You win!");

    // Update the win counter in the HTML
    document.getElementById("win-counter").innerHTML = winCounter;

    // Restart the game
    startGame();
  }

    // If we've run out of guesses
    else if (numGuesses === 0) {

    // Add to the loss counter
    lossCounter++;

    // Give the user an alert
    alert("You lose");

    // Update the loss counter in the HTML
    document.getElementById("loss-counter").innerHTML = lossCounter;

    // Restart the game
    startGame();

  }
}

// Starts the Game by running the startGame() function
startGame();

// Then initiates the function for capturing key clicks.
document.onkeyup = function(event) {

  // Converts all key clicks to lowercase letters.
  letterGuessed = String.fromCharCode(event.which).toLowerCase();

  // Runs the code to check for correct guesses.
  checkLetters(letterGuessed);

  // Runs the code that ends each round.
  roundComplete();
};
